
struct ListNode {
    int val;
    ListNode *next;
    ListNode() : val(0), next(nullptr) {}
    ListNode(int x) : val(x), next(nullptr) {}
    ListNode(int x, ListNode *next) : val(x), next(next) {}
};

ListNode* oddEvenList(ListNode* head) {
    if (head == nullptr ||  head->next == nullptr){return head;} 
    ListNode* impa = head;
    ListNode* par = head->next;
    ListNode* evenHead = par;
    while (par && par->next){
        impa->next = par->next;
        impa = impa->next;
        par->next = impa->next;
        par = par->next;
    }
    impa->next = evenHead;
    return head;
}


